@Library('jenkins-pipeline-library') _

pipeline {
    agent {
       node {
           label 'cfe-deploy'
       } 
    }

    parameters {
        choice(name: 'Environment', choices: ['QA', 'DEV','SUP'], description: 'Select the environment')
        booleanParam defaultValue: false, description: 'Please check in case you want to build Commons Module', name: 'DeployCommons'
        string(name: 'Snapshot_Commons', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')
        
        booleanParam defaultValue: false, description: 'Please check in case you want to build MyTetraPak Module', name: 'DeployMyTetrapak'
        string(name: 'Snapshot_MyTetrapak', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')
        
        booleanParam defaultValue: false, description: 'Plese check in case you want to build Public Web Module', name: 'DeployPublicWeb'
        string(name: 'Snapshot_PublicWeb', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')
	    
        booleanParam defaultValue: false, description: 'Please check in case you want to build Tetralaval Module', name: 'DeployTetraLaval'
        string(name: 'Snapshot_TetraLaval', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')
	    
        booleanParam defaultValue: false, description: 'Please check in case you want to build Supplierportal Module', name: 'DeploySupplierportal'
        string(name: 'Snapshot_Supplierportal', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')

         booleanParam defaultValue: false, description: 'Please check in case you want to build plas Module', name: 'DeployPlas'
        string(name: 'Snapshot_Plas', defaultValue: '', trim: true, description: 'If DEV202108270750 is your snapshot version, please input 202108270750 numeric part only')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        disableConcurrentBuilds()
        parallelsAlwaysFailFast()
        office365ConnectorWebhooks([[
            name: 'Office 365',
            startNotification: true,
            url: "https://tetrapak.webhook.office.com/webhookb2/53b8ede5-b02a-49e6-9ed1-5086cb59ca39@d2d2794a-61cc-4823-9690-8e288fd554cc/IncomingWebhook/178ca49866bd49ffa589e2339c07fe64/fa27bbed-fdda-4ecd-97e8-d8f572ab24d1"
        ]])
    }

    stages {
        stage('Pre-check for deployment') {
           steps {
               script {
				    precheck()
                }
            }
        }

        stage('Author and Publisher Deployment') {
            steps {
                script {     
                    if (params.Environment == "QA") {
                        author_url = "https://author1westeurope.test65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.test65.tetrapak.adobecqms.net"
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcredqa', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            devdeployment()
                        }
                    }
                               
                    if (params.Environment == "DEV") {

                        author_url = "https://author1westeurope.dev65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.dev65.tetrapak.adobecqms.net"
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcreddev', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            devdeployment()
                        }
                    }

                    if (params.Environment == "SUP") {
                        author_url = "https://author1westeurope.sup65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.sup65.tetrapak.adobecqms.net" 
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcredsup', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            supdeployment()
                        }
                    }

                    if (params.Environment == "STAGE65") {                          
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'sapient-user', usernameVariable: 'username', passwordVariable: 'password']])
                        {                           
                            stagedeployment65()
                        }
                    }					
                }
            }
        }

        stage('Cache Clear') {
            steps {
                script {
                    cacheflush()
                }
            }
        }
    }

    post {
        always {
            sendNotifications(currentBuild.currentResult)
        }
        cleanup {
            cleanWs deleteDirs: true, notFailBuild: true
        }
    }
}


    def devartifactdownload() {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
        {
                sh "curl -LO -k -k -u ${artifactuser}:${artifactpassword} https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"
                echo "https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"

        }

    }

/*
    def stageartifactdownload() {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
        {
                sh "curl -LO -k -k -u ${artifactuser}:${artifactpassword} https://tetrapak.jfrog.io/tetrapak/libs-release-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"
                echo "https://tetrapak.jfrog.io/tetrapak/libs-release-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"

        }

    }
*/
    def devdeployment() {
        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author Commons" : {
                        authordeploy()
                    },
                    "Publisher Commons" : {
                        publishdeploy()
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"
                devartifactdownload()
                parallel (  
                    "Author MyTetrapak" : {                                  
                        authordeploy()
                    },
                    "Publisher MyTetrapak" : {                                    
                        publishdeploy() 
                    }
                )                           
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"                
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (    
                    "Author PublicWeb" : {                                    
                        authordeploy()
                    },
                    "Publisher PublicWeb" : {                     
                        publishdeploy()  
                    }
                )
            }             
	 if (params.DeployTetraLaval) {
                packageName = "tetrapak-tetralaval.all"
                repoName = "tetrapak-tetralaval"
                fileName = "1.0.0-DEV${Snapshot_TetraLaval}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author TetraLaval" : {
                        authordeploy()
                    },
                    "Publisher Tetralaval" : {
                        publishdeploy()
                    }
                )
        }
	
	 if (params.DeploySupplierportal) {
                packageName = "tetrapak-supplierportal.complete"
                repoName = "tetrapak-supplierportal"
                fileName = "1.0.0-DEV${Snapshot_Supplierportal}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author Supplierportal" : {
                        authordeploy()
                    },
                    "Publisher Supplierportal" : {
                        publishdeploy()
                    }
                )
        }
        if (params.DeployPlas)    {
                packageName = "tetrapak-plas.complete"
                repoName = "tetrapak"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author plas" : {
                        authordeploy()
                    },
                    "Publisher plas" : {
                        publishdeploy()
                    }
                )

            }

    }
    
    def stagedeployment65() {
        author_url = "https://author1westeurope.stage65.tetrapak.adobecqms.net"
        def publish_urls = ["https://publish1westeurope.stage65.tetrapak.adobecqms.net", 
                            "https://publish2westeurope.stage65.tetrapak.adobecqms.net"]
        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                //fileName = "1.0.0-${Snapshot_Commons}"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()                
                parallel (
                    "Author Commons" : {                                    
                        authordeploy()
                    },
                    "Publisher Commons" : {  
                        for(url in publish_urls) {
                           publish_url = url
                           publishdeploy()
                        }                
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                //fileName = "1.0.0-${Snapshot_MyTetrapak}" 
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"                  
                devartifactdownload()                   
                parallel (
                    "Author MyTetrapak" : {                               
                        authordeploy()
                    },
                    "Publisher MyTetrapak" : {                      
                        for(url in publish_urls) {
                           publish_url = url
                           publishdeploy()
                        }                            
                    }
                )
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"
                //fileName = "1.0.0-${Snapshot_PublicWeb}"
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author PublicWeb" : {                               
                        authordeploy()
                    },
                    "Publisher PublicWeb" : {                  
                        for(url in publish_urls) {
                           publish_url = url
                           publishdeploy()
                        } 
                    }
                )                
            } 
    }
	
    def supdeployment() {
                
        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author Commons" : {
                        authordeploy()
                    },
                    "Publisher Commons" : {
                        publishdeploy()
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"
                devartifactdownload()
                parallel (  
                    "Author MyTetrapak" : {                                  
                        authordeploy()
                    },
                    "Publisher MyTetrapak" : {                                    
                        publishdeploy() 
                    }
                )                           
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"                
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (    
                    "Author PublicWeb" : {                                    
                        authordeploy()
                    },
                    "Publisher PublicWeb" : {                     
                        publishdeploy()  
                    }
                )
            }             

        }

    def authordeploy() {
        sh label: "Uninstalling Old Commons Package on author", script: "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=uninst&name=${packageName}&group=${repoName}' && sleep 60"
        sh label: "Deleting Old Commons Package on author", script: "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=rm&name=${packageName}&group=${repoName}' && sleep 60"
        sh label: "Uploading New Commons Package on author", script: "curl -k -u ${username}:${password} -F name=${packageName} -F file=@${packageName}-${fileName}.zip -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=upload' --verbose && sleep 60" 
        sh label: "Installing New Commons Package on author" , script: "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=inst&name=${packageName}&group=${repoName}' && sleep 60"
    }

    def publishdeploy() {
        sh label: "Uninstalling Old Commons Package on publish", script: "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=uninst&name=${packageName}&group=${repoName}' && sleep 60"
        sh label: "Deleting Old Commons Package on publish", script: "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=rm&name=${packageName}&group=${repoName}' && sleep 60" 
        sh label: "Uploading New Commons Package on publish" , script: "curl -k -u ${username}:${password} -F name=${packageName} -F file=@${packageName}-${fileName}.zip -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=upload' --verbose && sleep 60"
        sh label: "Installing New Commons Package on publish" , script: "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=inst&name=${packageName}&group=${repoName}' && sleep 60"
    }

    def cacheflush() { 
        build job: 'CFE/CFE-HTTPD-Cache-Flush', parameters: [string(name: 'ENVIRONMENT', value: params.Environment)], wait: true

        build job: 'CFE/CFE-Cdn-Cache', parameters: [string(name: 'Environment', value: params.Environment), booleanParam(name: 'Publicweb', value: params.DeployPublicWeb), booleanParam(name: 'Customerhub', value: params.DeployMyTetrapak), booleanParam(name: 'Brandsource', value: false), booleanParam(name: 'Tetralaval', value: params.DeployTetraLaval), booleanParam(name: 'Supplierportal', value: params.DeployPlas),booleanParam(name: 'Plas', value: params.DeployPlas)], wait: true  
    }

   def precheck() {
        if (!params.DeployCommons && !params.DeployMyTetrapak && !params.DeployPublicWeb && !params.DeploySupplierportal && !params.DeployTetraLaval && !params.DeployPlas) {
            echo "Please Select atleast one project"
			currentBuild.result = 'Failure'
			error "Deployment failed due to incorrect parameter selection."
        }
        if ((params.DeployCommons && !params.Snapshot_Commons?.trim()) || (params.DeployMyTetrapak && !params.Snapshot_MyTetrapak?.trim()) ||
              (params.DeployPublicWeb && !params.Snapshot_PublicWeb?.trim()) || (params.DeployTetraLaval && !params.Snapshot_TetraLaval?.trim()) ||
              (params.DeploySupplierportal && !params.Snapshot_Supplierportal?.trim())|| (params.DeployPlas && !params.Snapshot_Plas?.trim())) {
				echo "Please enter corresponding SnapshotVersion field"
				currentBuild.result = 'Failure'
				error "Deployment failed due to Missing Snapshot Version"
        }
    }
