pipeline {
    agent {
       node {
           label 'cfe-deploy'
       } 
    }

    parameters {
        choice(name: 'Environment', choices: ['QA65', 'SUP65', 'DEV65'], description: 'Select the environment')
        booleanParam defaultValue: true, description: 'Please check in case you want to build Commons Module', name: 'DeployCommons'
        booleanParam defaultValue: true, description: 'Please check in case you want to build MyTetraPak Module', name: 'DeployMyTetrapak'
        booleanParam defaultValue: true, description: 'Plese check in case you want to build Public Web Module', name: 'DeployPublicWeb'

        string(name: 'Snapshot_Commons', defaultValue: 'SnapshotVersion', description: '')
        string(name: 'Snapshot_MyTetrapak', defaultValue: 'SnapshotVersion', description: '')
        string(name: 'Snapshot_PublicWeb', defaultValue: 'SnapshotVersion', description: '')

    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        disableConcurrentBuilds()
    }


    stages {
        stage('Author and Publisher Deployment') {
            steps {
                script {                
                    if (params.Environment == "SUP65") {

                        author_url = "https://author1westeurope.sup65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.sup65.tetrapak.adobecqms.net" 
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcredsup', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            supdeployment()
                            echo "$username"
                            echo "$password"
                            
                        }
                    }
                    if (params.Environment == "DEV65") {

                        author_url = "https://author1westeurope.dev65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.dev65.tetrapak.adobecqms.net"
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcreddev', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            devdeployment()
                            echo "$username"
                            echo "$password"
                            
                        }
                    }
                    if (params.Environment == "QA65") {

                        author_url = "https://author1westeurope.test65.tetrapak.adobecqms.net"
                        publish_url = "https://publish1westeurope.test65.tetrapak.adobecqms.net"
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcredqa', usernameVariable: 'username', passwordVariable: 'password']])
                        {
                            devdeployment()
                            echo "$username"
                            echo "$password"
                            
                        }
                    }
                    if (params.Environment == "STAGE65") {
                        
                                author_url = "https://author1westeurope.stage65.tetrapak.adobecqms.net"
                                username = "sapient-user"
                                password = "*?qbpgyd+hNKR6E%mQmle[XK"                                 
                        //withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aemcredstage', usernameVariable: 'username', passwordVariable: 'password']])
                        //{                           
                                stagedeployment65()
                            
                        //}
                    }					
                }
            }
        }
    }
}


    def devartifactdownload() {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
        {
                sh "curl -LO -k -k -u ${artifactuser}:${artifactpassword} https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"
                echo "https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"

        }

    }

/*
    def stageartifactdownload() {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
        {
                sh "curl -LO -k -k -u ${artifactuser}:${artifactpassword} https://tetrapak.jfrog.io/tetrapak/libs-release-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"
                echo "https://tetrapak.jfrog.io/tetrapak/libs-release-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"

        }

    }
*/
    def devdeployment() {
                
        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author Commons" : {
                        authordeploy()
                    },
                    "Publisher Commons" : {
                        publishdeploy()
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"
                devartifactdownload()
                parallel (  
                    "Author MyTetrapak" : {                                  
                authordeploy()
                    },
                    "Publisher MyTetrapak" : {                                    
                publishdeploy() 
                    }
                )                           
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"                
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (    
                    "Author PublicWeb" : {                                    
                authordeploy()
                    },
                    "Publisher PublicWeb" : {                     
                publishdeploy()  
                    }
                )
            }             

        }
    
    def stagedeployment65() {

        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                //fileName = "1.0.0-${Snapshot_Commons}"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()                
                parallel (
                    "Author Commons" : {                                    
                authordeploy()
                    },
                    "Publisher Commons" : {                  
                publish_url = "https://publish1westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()
                    //},
                    //"Publisher 2 Commons" : {                
                publish_url = "https://publish2westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                //fileName = "1.0.0-${Snapshot_MyTetrapak}" 
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"                  
                devartifactdownload()                   
                parallel (
                    "Author MyTetrapak" : {                               
                authordeploy()
                    },
                    "Publisher MyTetrapak" : {                      
                publish_url = "https://publish1westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()
                    //},
                    //"Publisher 2 MyTetrapak" : {                      
                publish_url = "https://publish2westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()                           
                    }
                )
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"
                //fileName = "1.0.0-${Snapshot_PublicWeb}"
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author PublicWeb" : {                               
                authordeploy()
                    },
                    "Publisher PublicWeb" : {                  
                publish_url = "https://publish1westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()
                    //},
                    //"Publisher 2 PublicWeb" : {                  
                publish_url = "https://publish2westeurope.stage65.tetrapak.adobecqms.net"
                publishdeploy()
                    }
                )                
            } 
    }
	
    def supdeployment() {
                
        if (params.DeployCommons)    {
                packageName = "tetrapak-commons.complete"
                repoName = "tetrapak"
                fileName = "1.0.0-DEV${Snapshot_Commons}-SNAPSHOT"
                devartifactdownload()
                parallel (
                    "Author Commons" : {
                        authordeploy()
                    },
                    "Publisher Commons" : {
                        publishdeploy()
                    }
                )

            }
        if (params.DeployMyTetrapak) {
                packageName = "tetrapak-customerhub.complete"
                repoName = "tetrapak-customerhub"                
                fileName = "1.0.0-DEV${Snapshot_MyTetrapak}-SNAPSHOT"
                devartifactdownload()
                parallel (  
                    "Author MyTetrapak" : {                                  
                authordeploy()
                    },
                    "Publisher MyTetrapak" : {                                    
                publishdeploy() 
                    }
                )                           
        }
        if (params.DeployPublicWeb) {
                packageName = "tetrapak-publicweb.complete"
                repoName = "tetrapak-publicweb"                
                fileName = "1.0.0-DEV${Snapshot_PublicWeb}-SNAPSHOT"
                devartifactdownload()
                parallel (    
                    "Author PublicWeb" : {                                    
                authordeploy()
                    },
                    "Publisher PublicWeb" : {                     
                publishdeploy()  
                    }
                )
            }             

        }

    def authordeploy() {
                
                echo "Uninstalling Old Commons Package on author for Commons"
                sh "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=uninst&name=${packageName}'"
                sleep 60
                echo "Deleting Old Commons Package on author"
                sh "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=rm&name=${packageName}'"
                sleep 60
                echo "Uploading New Commons Package on author"
                sh "curl -k -u ${username}:${password} -F name=${packageName} -F file=@${packageName}-${fileName}.zip -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=upload' --verbose"
                sleep 60
                echo "Installing New Commons Package on author"
                sh "curl -k -u ${username}:${password} -F force=true '${author_url}/crx/packmgr/service.jsp?cmd=inst&name=${packageName}'"
                sleep 60

    }

    def publishdeploy() {
                
                echo "Uninstalling Old Commons Package on publish for Commons"
                sh "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=uninst&name=${packageName}'"
                sleep 60
                echo "Deleting Old Commons Package on publish"
                sh "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=rm&name=${packageName}'"
                sleep 60
                echo "Uploading New Commons Package on publish"
                sh "curl -k -u ${username}:${password} -F name=${packageName} -F file=@${packageName}-${fileName}.zip -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=upload' --verbose"
                sleep 60
                echo "Installing New Commons Package on publish"
                sh "curl -k -u ${username}:${password} -F force=true '${publish_url}/crx/packmgr/service.jsp?cmd=inst&name=${packageName}'"
                sleep 60

    }