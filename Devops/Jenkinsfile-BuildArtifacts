@Library('jenkins-pipeline-library') _

pipeline {
    agent {
        node {
        label 'cfe-deploy'
        }
    }
    
    parameters {
        booleanParam defaultValue: true, description: 'Please check in case you want to build Commons Module', name: 'Build_Commons'
        booleanParam defaultValue: true, description: 'Please check in case you want to build Public Web Module', name: 'Build_Publicweb'
        booleanParam defaultValue: false, description: 'Please check in case you want to build My Tetra Pak Module', name: 'Build_MyTetraPak'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        disableConcurrentBuilds()
    }

    environment {
        sonar_url = "https://sonarcloud.io"
        login_token = "2354fbb990d5494aad3c578f2c9dd65147d01e02"
        author_url = "https://author-tetrapak-dev64a.adobecqms.net"
        test_url_cuhu = "https://tetrapak-dev64a.adobecqms.net/content/tetrapak/customerhubtools/global/en/dashboard.html https://tetrapak-dev64a.adobecqms.net/content/tetrapak/customerhubtools/global/en/financials.html"
        test_url_pw = "https://tetrapak-dev64a.adobecqms.net/content/tetrapak/publicweb/lang-masters/en/home.html https://tetrapak-dev64a.adobecqms.net/content/tetrapak/publicweb/lang-masters/en/solutions https://tetrapak-dev64a.adobecqms.net/content/tetrapak/publicweb/lang-masters/en/insights https://tetrapak-dev64a.adobecqms.net/content/tetrapak/publicweb/lang-masters/en/sustainability https://tetrapak-dev64a.adobecqms.net/content/tetrapak/publicweb/lang-masters/en/about-tetra-pak"
        test_url_pally_zap_cuhu = "https://tetrapak-dev64a.adobecqms.net/content/tetrapak/customerhubtools/global/en/dashboard.html"
        test_url_pally_zap_pw = "https://tetrapak-dev64a.adobecqms.net/"
        karmapath_cuhu = "${env.WORKSPACE}@2/tetrapak-customerhub/ui.dev/src/coverage"
        karmapath_pw = "${env.WORKSPACE}@2/tetrapak-publicweb/ui.dev/src/coverage"
        build_id_number = ""
    }

    stages {

        stage('init-build-Number') {
            steps {
                script {
                    def now = new Date()
                    def formattedDate
                    formattedDate = now.format("yyyyMMddHHmm")
                    build_id_number = formattedDate
                    echo "build_id_number = ${build_id_number}-SNAPSHOT"

		}
            }
        }

        stage('Build and Sonar analysis') {

            agent {
                dockerfile {
                    args "-v ${env.HOME}/.m2:/root/.m2    --tmpfs /.npm -u root:root"
                    label 'cfe-deploy'
                }
            }

            steps {
                script {
                    if (params.Build_Commons) {
                        appname = "commons"
                        buildandsonar()
                    }
                    else {
					    dir('tetrapak-commons') {
					        sh "npm install --prefix ui.dev/src"
						}
					}
                }

                script {
                    if (params.Build_MyTetraPak) {
                        appname = "customerhub"
                        buildandsonar()
                    }
                }

                script {
                    if (params.Build_Publicweb) {
                        appname = "publicweb"
                        buildandsonar()
                    }
                }
            }
        }

}

}
    def buildandsonar() {
                echo "Build ${appname}"
                dir("tetrapak-${appname}") {
                sh "rm -rf ui.dev/src/node_modules && rm -rf ui.dev/src/package-lock.json"
                sh "npm cache clean --force"                    
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
                    {                       
                sh "mvn clean -s settings.xml -Dartuser=${artifactuser} -Dartpassword=${artifactpassword} install deploy -Pminify -Dbuildversion=1.0.0-DEV${build_id_number}-SNAPSHOT"
                    if (!params.Sonar_Analysis) {
                        echo "Skipping Sonar execution for customerhub module"
                    } else {
                        sh "mvn sonar:sonar -Dsonar.organization=tetrapak-smartsales   -Dsonar.host.url=${sonar_url} -Dsonar.buildbreaker.skip=true -Dsonar.login=${login_token} -Dsonar.branch=tetrapack-${appname}  -Dsonar.languages=java,js,css  -Dsonar.test.exclusions=**/core/src/test/**  -Dbuildversion=${build_id_number}-SNAPSHOT"
                    }
                }
                    }
    }
   
    def devartifactdownload() {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'tetrapak-artifactory-publish-creds', usernameVariable: 'artifactuser', passwordVariable: 'artifactpassword']])
        {
                sh "curl -LO -k -k -u ${artifactuser}:${artifactpassword} https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"
                echo "https://tetrapak.jfrog.io/tetrapak/libs-snapshot-local/${repoName}/${packageName}/${fileName}/${packageName}-${fileName}.zip"

        }
    }
	
	def sonarreport() {
                echo "Publishing Sonar report"
                sh 'sudo mkdir -p reports'
                sh 'sudo chmod -R 777 reports'
                sh 'echo "<html> <br /> <p style="font-size:30px"> <a href="https://sonarcloud.io/organizations/tetrapak-smartsales/projects" target="_top">Sonarcloud Report</a> <br /> </p> </html>" > reports/sonarreport.html'
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'sonarreport.html', reportName: 'SonarCloud Report', reportTitles: ''])
    }
