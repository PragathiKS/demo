// REM mixin wrappers
@mixin margin($args) {
    margin: convert-to-rem($args);
}

@mixin padding($args) {
    padding: convert-to-rem($args);
}

@mixin margin-left($args) {
    margin-left: convert-to-rem($args);
}

@mixin margin-right($args) {
    margin-right: convert-to-rem($args);
}

@mixin margin-top($args) {
    margin-top: convert-to-rem($args);
}

@mixin margin-bottom($args) {
    margin-bottom: convert-to-rem($args);
}

@mixin padding-left($args) {
    padding-left: convert-to-rem($args);
}

@mixin padding-right($args) {
    padding-right: convert-to-rem($args);
}

@mixin padding-top($args) {
    padding-top: convert-to-rem($args);
}

@mixin padding-bottom($args) {
    padding-bottom: convert-to-rem($args);
}

@mixin font-size($args) {
    font-size: convert-to-rem($args);
}

@mixin width($args) {
    width: convert-to-rem($args);
}

@mixin height($args) {
    height: convert-to-rem($args);
}

@mixin min-width($args) {
    min-width: convert-to-rem($args);
}

@mixin min-height($args) {
    min-height: convert-to-rem($args);
}

@mixin max-width($args) {
    max-width: convert-to-rem($args);
}

@mixin max-height($args) {
    max-height: convert-to-rem($args);
}

@mixin line-height($args) {
    line-height: convert-to-rem($args);
}

@mixin letter-spacing($args) {
    letter-spacing: convert-to-rem($args);
}

@mixin top($args) {
    top: convert-to-rem($args);
}

@mixin left($args) {
    left: convert-to-rem($args);
}

@mixin bottom($args) {
    bottom: convert-to-rem($args);
}

@mixin right($args) {
    right: convert-to-rem($args);
}

// Transition, animation and transform mixins
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin rotate($deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
    -ms-transform: rotate($deg);
    -o-transform: rotate($deg);
    transform: rotate($deg);
}

@mixin transform-translate($x, $y) {
    -ms-transform: translate($x, $y);
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin transform-origin($args...) {
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
    transform-origin: $args;
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($args...) {
    -webkit-animation: #{$args};
    -moz-animation: #{$args};
    -ms-animation: #{$args};
    -o-animation: #{$args};
    animation: #{$args};
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin border-radius($radius) {
    -webkit-border-radius: convert-to-rem($radius);
    -moz-border-radius: convert-to-rem($radius);
    border-radius: convert-to-rem($radius);
}

@mixin border-width($args) {
    border-width: convert-to-rem($args);
}

@mixin full-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin absolute-center {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}

// mixin shadow
@mixin box-shadow($args...) {
    -webkit-box-shadow: $args;
    -moz-box-shadow: $args;
    box-shadow: $args;
}

// mixin ellipsis
@mixin text-overflow-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// mixin for multiline ellipsis === -webkit-* only
@mixin multiline-ellipsis($line-height, $lines) {
    display: block;
    display: -webkit-box;
    max-height: $line-height*$lines;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
}

// mixin circle
@mixin circle($diameter) {
    @include width($diameter);
    @include height($diameter);
    border-radius: 50%;
}

// Vertical scroll touch
@mixin vertical-scroll-touch {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}

// Horizontal scroll touch
@mixin horizontal-scroll-touch {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
}

// mixin for display flex
@mixin display-flex {
    display: table;
    /* IE < 10, Opera *Presto* Desktop (Now dead) */
    display: -webkit-box;
    /* Safari 3.1 - 6, Chrome < 21 (2009 Spec), UCBrowser Android */
    display: -moz-box;
    /* Firefox 2 - 27 (2009 Spec), UCMini Android */
    display: -ms-flexbox;
    /* IE10 (2012 Syntax) */
    display: -webkit-flex;
    /* Safari 6.1 - 8, Android < 4.4, BB < 10, Chrome 21 - 28 */
    display: flex;
    /* Edge 12+, Firefox 28+, Blink, Safari 9+, Opera Mini 8+ */
}

@mixin triangle($direction, $size, $color) {
    $pxSize: $size;
    $size: convert-to-rem($size);
    content: '';
    display: block;
    height: 0;
    width: 0;
    @if ($direction=='up-right') {
        border-top: $pxSize solid $color;
        border-right: $pxSize solid $color;
        border-bottom: $pxSize solid $color-bg-theme;
        border-left: $pxSize solid $color-bg-theme;
        border-top: $size solid $color;
        border-right: $size solid $color;
        border-bottom: $size solid $color-bg-theme;
        border-left: $size solid $color-bg-theme;
    }
    @if ($direction=='down-right') {
        border-top: $pxSize solid $color-bg-theme;
        border-right: $pxSize solid $color;
        border-bottom: $pxSize solid $color;
        border-left: $pxSize solid $color-bg-theme;
        border-top: $size solid $color-bg-theme;
        border-right: $size solid $color;
        border-bottom: $size solid $color;
        border-left: $size solid $color-bg-theme;
    }
    @if ($direction=='down-left') {
        border-top: $pxSize solid $color-bg-theme;
        border-right: $pxSize solid $color-bg-theme;
        border-bottom: $pxSize solid $color;
        border-left: $pxSize solid $color;
        border-top: $size solid $color-bg-theme;
        border-right: $size solid $color-bg-theme;
        border-bottom: $size solid $color;
        border-left: $size solid $color;
    }
    @if ($direction=='up-left') {
        border-top: $pxSize solid $color;
        border-right: $pxSize solid $color-bg-theme;
        border-bottom: $pxSize solid $color-bg-theme;
        border-left: $pxSize solid $color;
        border-top: $size solid $color;
        border-right: $size solid $color-bg-theme;
        border-bottom: $size solid $color-bg-theme;
        border-left: $size solid $color;
    }
    @if ($direction=='up') {
        border-bottom: $pxSize solid $color;
        border-left: $pxSize solid $color-bg-theme;
        border-right: $pxSize solid $color-bg-theme;
        border-bottom: $size solid $color;
        border-left: $size solid $color-bg-theme;
        border-right: $size solid $color-bg-theme;
    }
    @else if ($direction=='down') {
        border-top: $pxSize solid $color;
        border-left: $pxSize solid $color-bg-theme;
        border-right: $pxSize solid $color-bg-theme;
        border-top: $size solid $color;
        border-left: $size solid $color-bg-theme;
        border-right: $size solid $color-bg-theme;
    }
    @else if ($direction=='left') {
        border-top: $pxSize solid $color-bg-theme;
        border-bottom: $pxSize solid $color-bg-theme;
        border-right: $pxSize solid $color;
        border-top: $size solid $color-bg-theme;
        border-bottom: $size solid $color-bg-theme;
        border-right: $size solid $color;
    }
    @else if ($direction=='right') {
        border-top: $pxSize solid $color-bg-theme;
        border-bottom: $pxSize solid $color-bg-theme;
        border-left: $pxSize solid $color;
        border-top: $size solid $color-bg-theme;
        border-bottom: $size solid $color-bg-theme;
        border-left: $size solid $color;
    }
}

@mixin column-count($args) {
    -moz-column-count: $args;
    -webkit-column-count: $args;
    column-count: $args;
}

@mixin column-gap($args) {
    column-gap: $args;
    column-gap: convert-to-rem($args);
}

@mixin animation-delay($sec) {
    -webkit-animation-delay: $sec;
    animation-delay: $sec;
}

@mixin user-select($args) {
    -webkit-user-select: $args;
    -moz-user-select: $args;
    -ms-user-select: $args;
    user-select: $args;
}

// mixin for position sticky
@mixin position-sticky {
    position: -webkit-sticky;
    position: sticky;
}